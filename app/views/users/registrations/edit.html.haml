.container-fluid
  %h1
    Account Settings
  = simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
    = f.error_notification
    .payment-errors
    .row
      .col-md-6
        %h2
          User Info
        .form-inputs
          = f.input :name, input_html: { :class => "form-control" }
          = f.input :email, input_html: { :class => "form-control" }, required: true, autofocus: true
          - if devise_mapping.confirmable? && resource.pending_reconfirmation?
            %p
              Currently waiting confirmation for: #{resource.unconfirmed_email}
          = f.input :password, input_html: { :class => "form-control" }, autocomplete: "off", hint: "leave it blank if you don't want to change it", required: false
          = f.input :password_confirmation, input_html: { :class => "form-control" }, required: false
          = f.input :current_password, input_html: { :class => "form-control" }, hint: "we need your current password to confirm your changes", required: true
        / %h3 Cancel my account
        / %p
        /   Unhappy? #{link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete}
        / = link_to "Back", :back
      .col-md-6
        - if current_user.counselor
          %h2 Payment Info
          %label
            %input#display_bank_details{:type => "checkbox"}
            Update Bank Details
          #bank_details_wrapper
            .form-group
              %label
                Country Code
              %input.form-control.country
            .form-group
              %label
                Routing Number
              %input.form-control.routing-number
            .form-group
              %label
                Account Number
              %input.form-control.account-number
    .form-actions
      = f.submit "Update", :class => "btn btn-primary"

:javascript
  // This identifies your website in the createToken call below
  Stripe.setPublishableKey('pk_test_E0zSFId2UQvPIozfMjD863F7');

  var bankDetails = $("#display_bank_details");
  var bankDetailsWrapper = $("#bank_details_wrapper");

  bankDetailsWrapper.hide();
  bankDetails.click(function() {
    if(bankDetails.is(":checked")){
      bankDetailsWrapper.slideDown();
      var stripeResponseHandler = function(status, response) {
        var $form = $('#edit_user');

        if (response.error) {
          // Show the errors on the form
          $form.find('.payment-errors').text(response.error.message);
          $form.find('button').prop('disabled', false);
        } else {
          // token contains id, last4, and card type
          var token = response.id;
          // Insert the token into the form so it gets submitted to the server
          $form.append($('<input type="hidden" name="stripeToken" />').val(token));
          // and re-submit
          $form.get(0).submit();
        }
      };

      jQuery(function($) {
        $('#edit_user').submit(function(e) {
          var $form = $(this);

          // Disable the submit button to prevent repeated clicks
          $form.find('button').prop('disabled', true);

          Stripe.bankAccount.createToken({
            country: $('.country').val(),
            routingNumber: $('.routing-number').val(),
            accountNumber: $('.account-number').val()
          }, stripeResponseHandler);

          // Prevent the form from submitting with the default action
          return false;
        });
      });
    }else{
      bankDetailsWrapper.slideUp();   
    }
  })
