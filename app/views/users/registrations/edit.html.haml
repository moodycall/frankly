.container
  .row
    .col-sm-4.col-sm-offset-4
      #user_edit_registration_wrapper.user_form_wrapper
        %h1
          Account Settings
        = simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
          = f.error_notification
          .payment-errors
          .form-inputs
            .form-group
              = f.input :name, input_html: { :class => "form-control floatlabel" }, :label => false, :placeholder => "Name"
            .form-group
              = f.input :email, input_html: { :class => "form-control floatlabel" }, required: true, autofocus: true, :label => false, :placeholder => "Email"
            / - if devise_mapping.confirmable? && resource.pending_reconfirmation?
            /   %p
            /     Currently waiting confirmation for: #{resource.unconfirmed_email}

            / .form-group
            /   = f.input :photo, input_html: { :class => "form-control" }, :label => "Personal Photo"
            .form-group
              = f.input :password, input_html: { :class => "form-control floatlabel" }, autocomplete: "off", hint: "leave it blank if you don't want to change it", required: false, :label => false, :placeholder => "New Password"
            .form-group
              = f.input :password_confirmation, input_html: { :class => "form-control floatlabel" }, required: false,  :label => false, :placeholder => "New Password Confirmation"
            .form-group
              = f.input :current_password, input_html: { :class => "form-control floatlabel" }, hint: "we need your current password to confirm your changes", required: true, :label => false, :placeholder => "Current Password"

          -# - if current_user.counselor
          -#   %h2 Payment Info
          -#   %label
          -#     %input#display_bank_details{:type => "checkbox"}
          -#     Update Bank Details
          -#   #bank_details_wrapper
          -#     .form-group
          -#       %input.form-control.floatlabel.country{:placeholder => "Country Code"}
          -#     .form-group
          -#       %input.form-control.floatlabel.routing-number{:placeholder => "Routing Number"}
          -#     .form-group
          -#       %input.form-control.floatlabel.account-number{:placeholder => "Account Number"}

          .row
            .col-md-6
              .form-group
                = f.label :send_session_sms_alerts, :label => "Send Session Text Alerts"
                = f.input :send_session_sms_alerts, input_html: { :class => "boolean-switch" }, :label => false
            .col-md-6
              .form-group
                = f.label :send_session_email_alerts, :label => "Send Session Email Alerts"
                = f.input :send_session_email_alerts, input_html: { :class => "boolean-switch" }, :label => false

          / %h3 Cancel my account
          / %p
          /   Unhappy? #{link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete}
          / = link_to "Back", :back

          .form-actions
            = f.submit "Update", :class => "btn btn-primary btn-block btn-lg"

:javascript
  // This identifies your website in the createToken call below
  Stripe.setPublishableKey('pk_test_E0zSFId2UQvPIozfMjD863F7');

  var bankDetails = $("#display_bank_details");
  var bankDetailsWrapper = $("#bank_details_wrapper");

  bankDetailsWrapper.hide();
  bankDetails.click(function() {
    if(bankDetails.is(":checked")){
      bankDetailsWrapper.slideDown();
      var stripeResponseHandler = function(status, response) {
        var $form = $('#edit_user');

        if (response.error) {
          // Show the errors on the form
          $form.find('.payment-errors').text(response.error.message);
          $form.find('button').prop('disabled', false);
        } else {
          // token contains id, last4, and card type
          var token = response.id;
          // Insert the token into the form so it gets submitted to the server
          $form.append($('<input type="hidden" name="stripeToken" />').val(token));
          // and re-submit
          $form.get(0).submit();
        }
      };

      jQuery(function($) {
        $('#edit_user').submit(function(e) {
          var $form = $(this);

          // Disable the submit button to prevent repeated clicks
          $form.find('button').prop('disabled', true);

          Stripe.bankAccount.createToken({
            country: $('.country').val(),
            routingNumber: $('.routing-number').val(),
            accountNumber: $('.account-number').val()
          }, stripeResponseHandler);

          // Prevent the form from submitting with the default action
          return false;
        });
      });
    }else{
      bankDetailsWrapper.slideUp();   
    }
  })
