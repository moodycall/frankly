// edited by vivek
#textchat
  #chat-heading
    - if current_user.is_counselor_of_session(@counseling_session.counselor_id)
      %p.chat-name.closed
        = @counseling_session.client.name
        = image_tag "icons/chat.png"
    - else
      %p.chat-name.closed
        = @counseling_session.counselor.user.name
        = image_tag "icons/chat.png"
  #historyDiv
    #history
    %form#form
      %input#msgTxt
      // end
.container
  %br
  %br
  .row
    .col-sm-8
      - unless current_user.is_counselor_of_session(@counseling_session.counselor_id)
        .counselor_preview_wrapper
          .row
            .col-xs-4.col-md-3
              .counselor_image_wrapper
                -if @counseling_session.counselor.photo.present?
                  = image_tag @counseling_session.counselor.photo_url(:medium), :class => "counselor_image"
                -else
                  = image_tag "default-avatar.png", :class => "counselor_image"
            .col-xs-6.col-md-7

              .counselor_name_wrapper
                %h1.counselor_name
                  = @counseling_session.counselor.user.name

              %p.session_timeline
                = @counseling_session.start_datetime.in_time_zone.strftime("%B %e, %Y at %l:%M%P -")
                = @counseling_session.estimated_endtime.in_time_zone.strftime("%l:%M%P")

    .col-sm-4
      - if current_user.is_counselor_of_session(@counseling_session.counselor_id)
        %p.text-right.text-muted
          %em
            = current_user.counselor.session_count_with_client(@counseling_session.client_id).ordinalize
            session with
            = @counseling_session.client.name
      - else
        %p.text-right.text-muted
          %em
            = current_user.session_count_with_counselor(@counseling_session.counselor.id).ordinalize
            session with
            = @counseling_session.counselor.user.name
      
      %p.text-right
        #countdown_clock.text-right
        #cntdwn.text-right

      %br

  #video_wrapper
    #userDiv.hidden-xs

    #connectedToDiv

    #awaiting_connection
      %p
        Your video call will begin once you allow use of camera, microphone, and the other party joins.

  %br
  .text-muted.text-center
    Make sure to allow Camera and Microphone in your browser.

  -# #clock

  - unless current_user.is_counselor_of_session(@counseling_session.counselor_id)

    %hr
    - if @rating.present?
      %br
      .text-center
        = render "ratings/modal"
    - else
      .text-center
        %em
          You have already submitted a rating for this session.

  .text-center#exitSession
    = link_to "Exit Session", user_dashboard_path, :class => "btn text-danger"

/ Modal
#compatabilityModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
  .modal-dialog
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %h4#myModalLabel.modal-title Get Ready!
      .modal-body
        %p
          For a seamless experience, please download one of the two MoodyCall supported browsers below before continuing.
        %p
          %em
            (Note: Windows, Mac OSX, or Android required)

        %hr

        .row
          .col-sm-6.text-center
            .form-group
              = link_to "https://www.google.com/chrome/browser/", :target => "_blank" do
                = image_tag "icons/icon-chrome.png", :class => "browser-icon"
                Download Chrome

          .col-sm-6.text-center
            .form-group
              = link_to "http://firefox.com", :target => "_blank" do
                = image_tag "icons/icon-firefox.png", :class => "browser-icon"
                Download Firefox

      .modal-footer
        = link_to "Why use another browser?", "http://moodycall.org/system-requirements", :target => "_blank", :class => "btn btn-link"
        %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close

-# %script{:src => "//www-tbrel.tokbox.com/v2.6/js/opentok.js"}
%script{:src => "//static.opentok.com/v2/js/opentok.min.js"}
:javascript

  if (#{browser.chrome?} == true || #{browser.firefox?} == true) {
  }
  else if (#{browser.mobile?} == true) {
   $('#compatabilityModal').modal('show');
  }
  else {
    $('#compatabilityModal').modal('show');
  }

  var Time = Date.now();

  $('#countdown_clock').countdown("#{@counseling_session.start_datetime.strftime("%Y/%m/%d %T")}", function(event) {
    var totalHours = event.offset.totalDays * 24 + event.offset.hours;
    $(this).html(event.strftime(totalHours + ' hr %M min %S sec'));

    if ( event.strftime(totalHours + ' hr %M min %S sec').toString() == "0 hr 00 min 00 sec") {
      $(this).html("Session is LIVE");
    }
    
  });

  var countDownClock = function() {

    function pad(n) {
       return (n < 10) ? '0' + n : n;
    }

    var s = new Date();
    var now = new Date();
    var endTime = new Date();

    endTime.setHours("#{@counseling_session.estimated_endtime.utc.strftime("%k")}");

    endTime.setMinutes("#{@counseling_session.estimated_endtime.utc.strftime("%M")}");

    endTime.setSeconds(0);

    s.setHours(now.getUTCHours());
    s.setMinutes(now.getUTCMinutes());
    s.setSeconds(now.getUTCSeconds());

    s = endTime - s;

    var min = (s/1000/60) << 0,
    sec = ((s/1000) % 60) << 0;

    if(s <= 300000){
      var cntdwntext = 'Your session ends in '+pad(min)+':'+pad(sec);
      $('#cntdwn').text(cntdwntext);
    }
    
    if(s <= 0){
      session.disconnect();
      $(historyDiv).hide();
      $('.chat-name').addClass('closed');
      alert('Your session has expired');
      if($("#endSession").length>0){
        $('#hideButton').click();
      }else{
        window.location = $('#exitSession').find('a').attr('href');
      }

    }else{
      var delay = 1000 - (now % 1000);
      setTimeout(countDownClock, delay);
    }
  }

  countDownClock();

  var disconn = 0;
  var apiKey = "#{ENV["OPENTOK_KEY"]}";
  var sessionId = "#{@counseling_session.opentok_session_id}"; 
  var token = "#{@token}";
  
  var session = OT.initSession(apiKey, sessionId);

  session.on({ 
      streamCreated: function(event) { 
        $("#awaiting_connection").hide();
        session.subscribe(event.stream, 'connectedToDiv', {insertMode: 'append', width:'100%', height:600}); 
        $("#connectedToDiv .OT_subscriber").css({"margin-left": "auto", "margin-right": "auto"});
      }
  });
  var publisher = OT.initPublisher("userDiv")

  session.connect(token, function(error) {
    if (error) {
      disconn = 1;
      console.log(error.message);
      $("#awaiting_connection").show();
    } else {
      disconn = 0;
      session.publish(publisher, {width:50, height:25});
    }
  });
  var form = document.querySelector('#form');
  // Receive a message and append it to the history
  var msgHistory = document.querySelector('#history');
  session.on('signal:chat', function(event) {
      var msg = document.createElement('p');
      msg.innerHTML = event.data;
      msg.className = event.from.connectionId === session.connection.connectionId ? 'mine' : 'theirs';
      msgHistory.appendChild(msg);
      //msgHistory.insertBefore(msg,form);
      //msg.scrollIntoView();
      msg.parentNode.scrollTop = msg.offsetTop;
      if (msg.className == 'theirs'){
        $('.chat-name img').show();
      }
  });

  // Send a signal once the user enters data in the form.This will send the data entered to all participants

  var msgTxt = document.querySelector('#msgTxt');
  $('#form').submit(function(){
    event.preventDefault();

      session.signal({
          type: 'chat',
          data: msgTxt.value
      }, function(error) {
          if (!error) {
            msgTxt.value = '';
          }else{
            alert("Sorry, Your are not connected to the session");
          }
      });
  });

  // Clicking on the chat section, open the chat window
  var historyDiv = document.querySelector('#historyDiv');
  var chatSec = document.querySelector('#chat-heading');
  $(chatSec).click(function(){
    $(historyDiv).toggle();
    $('.chat-name').toggleClass('closed');
    $(msgTxt).focus();
  });

  $(msgTxt).focus(function(){
    $('.chat-name img').hide();
  });

  // End session when click on rating button
  session.on("sessionDisconnected", function(error) {
    disconn = 1;
  });

  $('#endSession').click(function(){

    var conf = true;
    if(disconn == 0){
      conf = confirm('Are you sure to end the session?');
    }
    if(conf == true){
      disconn == 0
      session.disconnect();
      $(historyDiv).hide();
      $('.chat-name').addClass('closed');
      $('#hideButton').click();
    }
    
  });